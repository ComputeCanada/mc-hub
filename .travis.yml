language: bash

services:
  - docker

language: node_js
node_js:
  - 12

env:
  global:
    - IMAGE_NAME=fredericfc/magic_castle-ui

before_install:
  - openssl aes-256-cbc -K $encrypted_3b9f0b9d36d1_key -iv $encrypted_3b9f0b9d36d1_iv -in secrets.tar.enc -out secrets.tar -d
  - tar xvf secrets.tar

install:
  - (cd frontend && npm ci)
  - docker build --tag "$IMAGE_NAME" --target production-server .

script:
  - (cd frontend && npm run test:unit)
  - |
    if [ -z $TRAVIS_TAG ]; then
      docker run --rm --publish 5000:5000 \
     --mount "type=volume,source=database,target=/home/mcu/database" \
     --mount "type=bind,source=$(pwd)/gcloud-key.json,target=/home/mcu/credentials/gcloud-key.json" \
     --mount "type=bind,source=$(pwd)/clouds.yaml,target=/home/mcu/.config/openstack/clouds.yaml" \
     --mount "type=bind,source=$(pwd)/configuration.json,target=/home/mcu/configuration.json" \
        -w /home/mcu/app "$IMAGE_NAME" python -m pytest;
    else
      docker run --rm --publish 5000:5000 \
     --mount "type=volume,source=database,target=/home/mcu/database" \
     --mount "type=bind,source=$(pwd)/gcloud-key.json,target=/home/mcu/credentials/gcloud-key.json" \
     --mount "type=bind,source=$(pwd)/clouds.yaml,target=/home/mcu/.config/openstack/clouds.yaml" \
     --mount "type=bind,source=$(pwd)/configuration.json,target=/home/mcu/configuration.json" \
        -w /home/mcu/app "$IMAGE_NAME" python -m pytest --build-live-cluster;
    fi

before_deploy:
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker tag "$IMAGE_NAME" "${IMAGE_NAME}:latest"
  - docker tag "$IMAGE_NAME" "${IMAGE_NAME}:$(git describe --tags --abbrev=0)"

deploy:
  provider: script
  skip_cleanup: true
  script: docker push "${IMAGE_NAME}:latest" && docker push "${IMAGE_NAME}:$(git describe --tags --abbrev=0)"
  on:
    tags: true
